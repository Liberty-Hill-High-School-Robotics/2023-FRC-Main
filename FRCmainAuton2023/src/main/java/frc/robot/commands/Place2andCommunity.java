// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package frc.robot.commands;
import edu.wpi.first.wpilibj2.command.ParallelCommandGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import edu.wpi.first.wpilibj2.command.WaitCommand;
import frc.robot.Constants.PlacementConstants.PlacementPosition;
import frc.robot.subsystems.Claw;
import frc.robot.subsystems.ClawRotate;
import frc.robot.subsystems.Drive;
import frc.robot.subsystems.HorizontalElevator;
import frc.robot.subsystems.HorizontalRotate;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.VerticalElevator;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Place2andCommunity extends SequentialCommandGroup {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public Place2andCommunity(
        Drive drive,
        Claw claw,
        GoToTop goToTop,
        GoToStart toStart,
        VerticalElevator verticalElevator,
        HorizontalElevator horizontalElevator,
        HorizontalRotate horizontalRotate,
        ClawRotate clawRoatate
    ){

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    addCommands(
        // Add Commands here:
        // Also add parallel commands using the
        //
        // addCommands(
        //      new command1(argsN, subsystem),
        //      parallel(
        //          new command2(argsN, subsystem),
        //          new command3(argsN, subsystem)
        //      )    
        //  );


        //place starting cone
        new PlaceConeTop(claw, goToTop, toStart, verticalElevator, horizontalElevator, horizontalRotate, clawRoatate),
        new WaitCommand(.5),
        new GoToStart(verticalElevator, horizontalElevator, horizontalRotate, clawRoatate),
        //start driving backwards
        new driveDistance(drive, -150),
        //turn to face cone
        new WaitCommand(.5),
        new turn(drive),
        //drive up to cone
        new driveDistance(drive, 10),
        new WaitCommand(.5),
        new GoToPickUp(verticalElevator, horizontalElevator, horizontalRotate, clawRoatate),
        new driveDistance(drive, 10), //to push cone in back of claw
        new ClawClose(claw),
        new WaitCommand(.5),
        //^^open and drive slowly
        new GoToStart(verticalElevator, horizontalElevator, horizontalRotate, clawRoatate),
        new WaitCommand(.5),
        new turn(drive),
        //turn and go to start
        new WaitCommand(.5),
        new driveDistance(drive, 10),
        new GoToMiddle(verticalElevator, horizontalElevator, horizontalRotate, clawRoatate),
        new WaitCommand(.5),
        new ClawOpen(claw),
        new WaitCommand(.5),
        new GoToStart(verticalElevator, horizontalElevator, horizontalRotate, clawRoatate)
        //drive, place etc.

        
        
        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
